# Divide el conjunto de resultados en particiones, y dentro de cada partición, reinicia la numeración. 
# Partiendo de la base del ROW_NUMBER, si queremos hacer un ranking de las series, relacionando su género y numerándolas según su año de lanzamiento, por ejemplo:

# Serie 1 - Animación - 1
# Serie 2 - Biografía - 1
# Serie 3 - Ciencia Ficción - 1
# Serie 4 - Ciencia Ficción - 2
# Serie 5 - Comedia - 1
# Serie 6 - Comedia - 2

SELECT
	titulo,
    genero,
    año_lanzamiento,
ROW_NUMBER() OVER(PARTITION BY genero ORDER BY año_lanzamiento DESC) AS `Ranking por género`
FROM series

# Escribe una consulta SQL que seleccione la temporada, el título del episodio, la fecha de estreno y utilice ROW_NUMBER() en combinación con PARTITION BY 
# para asignar un ranking de episodios basado en su fecha de estreno (de más reciente a más antiguo DESC), está nueva columna deberá tener el nombre: ranking_temporada

SELECT
	temporada,
	titulo,
	fecha_estreno,
ROW_NUMBER() OVER(PARTITION BY temporada ORDER BY fecha_estreno DESC) AS ranking_temporada
FROM episodios

# Escribe una consulta de SQL que genere un ranking de episodios para cada temporada de Stranger Things (serie_id = 2) basándose en las calificaciones de IMDb, 
# de modo que puedas identificar los episodios mejor valorados dentro de cada temporada.

SELECT
	temporada,
	titulo,
	rating_imdb,
ROW_NUMBER() OVER(PARTITION BY temporada ORDER BY rating_imdb DESC) AS `Ranking IMDb`
FROM episodios
WHERE serie_id = 2
